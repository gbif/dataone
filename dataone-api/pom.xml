<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.gbif.dataone</groupId>
    <artifactId>dataone-motherpom</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>

  <artifactId>dataone-api</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>dataone-api</name>
  <description>Types built from the XSDs and supplementary classes</description>


  <repositories>
    <repository>
      <id>gbif-all</id>
      <url>http://repository.gbif.org/content/groups/gbif</url>
    </repository>
  </repositories>

  <build>
    <plugins>
      <!--
        Generates source from the XSD using plugins to provide immutable
        classes, fluent builders, annotations for selected @XmlRootElement and guava
        based equals, toString and hashcode.
        See also:
        - https://github.com/mklemm/jaxb2-rich-contract-plugin (immutable and builders)
        - https://github.com/danielwegener/xjc-guava-plugin (guava helpers)
      -->
      <plugin>
        <groupId>org.jvnet.jaxb2.maven2</groupId>
        <artifactId>maven-jaxb2-plugin</artifactId>
        <version>${maven-jaxb2-plugin.version}</version>
        <executions>
          <execution>
            <id>xsd-generate-2.1</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <schemaIncludes>
            <schemaInclude>**/dataoneTypes.xsd</schemaInclude>
          </schemaIncludes>
          <!-- Included only so we can specify which complex types get annotated with @XmlRootElement -->
          <bindingIncludes>
            <include>dataoneTypes-bindings.xjb</include>
          </bindingIncludes>
          <strict>true</strict>
          <verbose>true</verbose>
          <extension>true</extension>
          <!-- Important! Deletes any other source code in directory by design -->
          <removeOldOutput>true</removeOldOutput>
          <forceRegenerate>true</forceRegenerate>
          <generateDirectory>${project.basedir}/src/main/java-generated</generateDirectory>
          <args>
            <arg>-Ximmutable</arg>
            <arg>-Xfluent-builder</arg>
            <!-- Required to bring in @XmlRootElement: see dataoneTypes-bindings.xjb -->
            <arg>-Xannotate</arg>
            <arg>-Xguava</arg>
          </args>
          <plugins>
            <!-- Required for immutable and builder pattern -->
            <plugin>
              <groupId>net.codesup.util</groupId>
              <artifactId>jaxb2-rich-contract-plugin</artifactId>
              <version>${jaxb2-rich-contract-plugin.version}</version>
            </plugin>
            <!-- Required for @XmlRootElement -->
            <plugin>
              <groupId>org.jvnet.jaxb2_commons</groupId>
              <artifactId>jaxb2-basics-annotate</artifactId>
              <version>${jaxb2_commons.version}</version>
            </plugin>
            <!-- Required for @XmlRootElement -->
            <plugin>
              <groupId>org.jvnet.jaxb2_commons</groupId>
              <artifactId>jaxb2-basics</artifactId>
              <version>${jaxb2_commons.version}</version>
            </plugin>
            <!-- Required for Guava based equals etc. -->
            <plugin>
              <groupId>com.github.danielwegener.xjc</groupId>
              <artifactId>xjc-guava-plugin</artifactId>
              <version>${xjc-guava-plugin.version}</version>
            </plugin>
          </plugins>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
  </dependencies>
</project>
